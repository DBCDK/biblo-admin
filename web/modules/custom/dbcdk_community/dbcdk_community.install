<?php
/**
 * @file
 * Install, update and uninstall functions for the dbcdk_community module.
 */

use DBCDK\CommunityServices\ApiException;

/**
 * Implements hook_requirements().
 */
function dbcdk_community_requirements($phase) {
  $requirements = [];

  if ($phase === 'runtime') {
    // Add a requirement regarding access to community service.
    $config = Drupal::config('dbcdk_community.settings');
    $url = $config->get('community_service_url');

    $service_requirement = [
      'title' => 'DBCDK community service',
      'value' => $url,
      'severity' => REQUIREMENT_OK,
    ];

    /* @var \DBCDK\CommunityServices\Api\ProfileApi $profile_api */
    $profile_api = Drupal::service('dbcdk_community.api.profile');
    try {
      // Try to do an arbitrary call the the community service. Getting an
      // actual result is not important here.
      $profile_api->profileFindOne(json_encode(['limit' => 1]));
    }
    catch (ApiException $e) {
      // If an exception is thrown then mark requirement as failed and log it.
      $service_requirement['severity'] = REQUIREMENT_ERROR;
      $service_requirement['description'] = $e->getMessage();
      Drupal::service('dbcdk_community.logger')->error($e);
    }

    $requirements[] = $service_requirement;
  }

  return $requirements;
}
