<?php
/**
 * FileApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * communityservice
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * FileApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FileApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for fileCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testFileCount()
    {

    }

    /**
     * Test case for fileCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testFileCreate()
    {

    }

    /**
     * Test case for fileCreateChangeStreamGetFilesChangeStream
     *
     * Create a change stream..
     *
     */
    public function testFileCreateChangeStreamGetFilesChangeStream()
    {

    }

    /**
     * Test case for fileCreateChangeStreamPostFilesChangeStream
     *
     * Create a change stream..
     *
     */
    public function testFileCreateChangeStreamPostFilesChangeStream()
    {

    }

    /**
     * Test case for fileDeleteById
     *
     * Delete a model instance by id from the data source..
     *
     */
    public function testFileDeleteById()
    {

    }

    /**
     * Test case for fileExistsGetFilesidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testFileExistsGetFilesidExists()
    {

    }

    /**
     * Test case for fileExistsHeadFilesid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testFileExistsHeadFilesid()
    {

    }

    /**
     * Test case for fileFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testFileFind()
    {

    }

    /**
     * Test case for fileFindById
     *
     * Find a model instance by id from the data source..
     *
     */
    public function testFileFindById()
    {

    }

    /**
     * Test case for fileFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testFileFindOne()
    {

    }

    /**
     * Test case for filePrototypeCountResolutions
     *
     * Counts resolutions of file..
     *
     */
    public function testFilePrototypeCountResolutions()
    {

    }

    /**
     * Test case for filePrototypeCreateResolutions
     *
     * Creates a new instance in resolutions of this model..
     *
     */
    public function testFilePrototypeCreateResolutions()
    {

    }

    /**
     * Test case for filePrototypeDeleteResolutions
     *
     * Deletes all resolutions of this model..
     *
     */
    public function testFilePrototypeDeleteResolutions()
    {

    }

    /**
     * Test case for filePrototypeDestroyByIdResolutions
     *
     * Delete a related item by id for resolutions..
     *
     */
    public function testFilePrototypeDestroyByIdResolutions()
    {

    }

    /**
     * Test case for filePrototypeExistsResolutions
     *
     * Check the existence of resolutions relation to an item by id..
     *
     */
    public function testFilePrototypeExistsResolutions()
    {

    }

    /**
     * Test case for filePrototypeFindByIdResolutions
     *
     * Find a related item by id for resolutions..
     *
     */
    public function testFilePrototypeFindByIdResolutions()
    {

    }

    /**
     * Test case for filePrototypeGetResolutions
     *
     * Queries resolutions of file..
     *
     */
    public function testFilePrototypeGetResolutions()
    {

    }

    /**
     * Test case for filePrototypeLinkResolutions
     *
     * Add a related item by id for resolutions..
     *
     */
    public function testFilePrototypeLinkResolutions()
    {

    }

    /**
     * Test case for filePrototypeUnlinkResolutions
     *
     * Remove the resolutions relation to an item by id..
     *
     */
    public function testFilePrototypeUnlinkResolutions()
    {

    }

    /**
     * Test case for filePrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source..
     *
     */
    public function testFilePrototypeUpdateAttributes()
    {

    }

    /**
     * Test case for filePrototypeUpdateByIdResolutions
     *
     * Update a related item by id for resolutions..
     *
     */
    public function testFilePrototypeUpdateByIdResolutions()
    {

    }

    /**
     * Test case for fileUpdateAll
     *
     * Update instances of the model matched by where from the data source..
     *
     */
    public function testFileUpdateAll()
    {

    }

    /**
     * Test case for fileUpload
     *
     * Uploads a file.
     *
     */
    public function testFileUpload()
    {

    }

    /**
     * Test case for fileUpsert
     *
     * Update an existing model instance or insert a new one into the data source..
     *
     */
    public function testFileUpsert()
    {

    }

}
