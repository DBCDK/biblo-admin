<?php
/**
 * PostApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * communityservice
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * PostApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PostApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for postCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testPostCount()
    {

    }

    /**
     * Test case for postCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testPostCreate()
    {

    }

    /**
     * Test case for postCreateChangeStreamGetPostsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testPostCreateChangeStreamGetPostsChangeStream()
    {

    }

    /**
     * Test case for postCreateChangeStreamPostPostsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testPostCreateChangeStreamPostPostsChangeStream()
    {

    }

    /**
     * Test case for postDeleteById
     *
     * Delete a model instance by id from the data source..
     *
     */
    public function testPostDeleteById()
    {

    }

    /**
     * Test case for postExistsGetPostsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testPostExistsGetPostsidExists()
    {

    }

    /**
     * Test case for postExistsHeadPostsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testPostExistsHeadPostsid()
    {

    }

    /**
     * Test case for postFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testPostFind()
    {

    }

    /**
     * Test case for postFindById
     *
     * Find a model instance by id from the data source..
     *
     */
    public function testPostFindById()
    {

    }

    /**
     * Test case for postFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testPostFindOne()
    {

    }

    /**
     * Test case for postPrototypeCountComments
     *
     * Counts comments of Post..
     *
     */
    public function testPostPrototypeCountComments()
    {

    }

    /**
     * Test case for postPrototypeCountFlags
     *
     * Counts flags of Post..
     *
     */
    public function testPostPrototypeCountFlags()
    {

    }

    /**
     * Test case for postPrototypeCountLikes
     *
     * Counts likes of Post..
     *
     */
    public function testPostPrototypeCountLikes()
    {

    }

    /**
     * Test case for postPrototypeCreateComments
     *
     * Creates a new instance in comments of this model..
     *
     */
    public function testPostPrototypeCreateComments()
    {

    }

    /**
     * Test case for postPrototypeCreateFlags
     *
     * Creates a new instance in flags of this model..
     *
     */
    public function testPostPrototypeCreateFlags()
    {

    }

    /**
     * Test case for postPrototypeCreateImage
     *
     * Creates a new instance in image of this model..
     *
     */
    public function testPostPrototypeCreateImage()
    {

    }

    /**
     * Test case for postPrototypeCreateLikes
     *
     * Creates a new instance in likes of this model..
     *
     */
    public function testPostPrototypeCreateLikes()
    {

    }

    /**
     * Test case for postPrototypeCreateVideo
     *
     * Creates a new instance in video of this model..
     *
     */
    public function testPostPrototypeCreateVideo()
    {

    }

    /**
     * Test case for postPrototypeDeleteComments
     *
     * Deletes all comments of this model..
     *
     */
    public function testPostPrototypeDeleteComments()
    {

    }

    /**
     * Test case for postPrototypeDeleteFlags
     *
     * Deletes all flags of this model..
     *
     */
    public function testPostPrototypeDeleteFlags()
    {

    }

    /**
     * Test case for postPrototypeDeleteLikes
     *
     * Deletes all likes of this model..
     *
     */
    public function testPostPrototypeDeleteLikes()
    {

    }

    /**
     * Test case for postPrototypeDestroyByIdComments
     *
     * Delete a related item by id for comments..
     *
     */
    public function testPostPrototypeDestroyByIdComments()
    {

    }

    /**
     * Test case for postPrototypeDestroyByIdFlags
     *
     * Delete a related item by id for flags..
     *
     */
    public function testPostPrototypeDestroyByIdFlags()
    {

    }

    /**
     * Test case for postPrototypeDestroyByIdLikes
     *
     * Delete a related item by id for likes..
     *
     */
    public function testPostPrototypeDestroyByIdLikes()
    {

    }

    /**
     * Test case for postPrototypeDestroyImage
     *
     * Deletes image of this model..
     *
     */
    public function testPostPrototypeDestroyImage()
    {

    }

    /**
     * Test case for postPrototypeDestroyVideo
     *
     * Deletes video of this model..
     *
     */
    public function testPostPrototypeDestroyVideo()
    {

    }

    /**
     * Test case for postPrototypeExistsLikes
     *
     * Check the existence of likes relation to an item by id..
     *
     */
    public function testPostPrototypeExistsLikes()
    {

    }

    /**
     * Test case for postPrototypeFindByIdComments
     *
     * Find a related item by id for comments..
     *
     */
    public function testPostPrototypeFindByIdComments()
    {

    }

    /**
     * Test case for postPrototypeFindByIdFlags
     *
     * Find a related item by id for flags..
     *
     */
    public function testPostPrototypeFindByIdFlags()
    {

    }

    /**
     * Test case for postPrototypeFindByIdLikes
     *
     * Find a related item by id for likes..
     *
     */
    public function testPostPrototypeFindByIdLikes()
    {

    }

    /**
     * Test case for postPrototypeGetComments
     *
     * Queries comments of Post..
     *
     */
    public function testPostPrototypeGetComments()
    {

    }

    /**
     * Test case for postPrototypeGetFlags
     *
     * Queries flags of Post..
     *
     */
    public function testPostPrototypeGetFlags()
    {

    }

    /**
     * Test case for postPrototypeGetGroup
     *
     * Fetches belongsTo relation group..
     *
     */
    public function testPostPrototypeGetGroup()
    {

    }

    /**
     * Test case for postPrototypeGetImage
     *
     * Fetches hasOne relation image..
     *
     */
    public function testPostPrototypeGetImage()
    {

    }

    /**
     * Test case for postPrototypeGetLikes
     *
     * Queries likes of Post..
     *
     */
    public function testPostPrototypeGetLikes()
    {

    }

    /**
     * Test case for postPrototypeGetOwner
     *
     * Fetches belongsTo relation owner..
     *
     */
    public function testPostPrototypeGetOwner()
    {

    }

    /**
     * Test case for postPrototypeGetVideo
     *
     * Fetches hasOne relation video..
     *
     */
    public function testPostPrototypeGetVideo()
    {

    }

    /**
     * Test case for postPrototypeLinkLikes
     *
     * Add a related item by id for likes..
     *
     */
    public function testPostPrototypeLinkLikes()
    {

    }

    /**
     * Test case for postPrototypeUnlinkLikes
     *
     * Remove the likes relation to an item by id..
     *
     */
    public function testPostPrototypeUnlinkLikes()
    {

    }

    /**
     * Test case for postPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source..
     *
     */
    public function testPostPrototypeUpdateAttributes()
    {

    }

    /**
     * Test case for postPrototypeUpdateByIdComments
     *
     * Update a related item by id for comments..
     *
     */
    public function testPostPrototypeUpdateByIdComments()
    {

    }

    /**
     * Test case for postPrototypeUpdateByIdFlags
     *
     * Update a related item by id for flags..
     *
     */
    public function testPostPrototypeUpdateByIdFlags()
    {

    }

    /**
     * Test case for postPrototypeUpdateByIdLikes
     *
     * Update a related item by id for likes..
     *
     */
    public function testPostPrototypeUpdateByIdLikes()
    {

    }

    /**
     * Test case for postPrototypeUpdateImage
     *
     * Update image of this model..
     *
     */
    public function testPostPrototypeUpdateImage()
    {

    }

    /**
     * Test case for postPrototypeUpdateVideo
     *
     * Update video of this model..
     *
     */
    public function testPostPrototypeUpdateVideo()
    {

    }

    /**
     * Test case for postUpdateAll
     *
     * Update instances of the model matched by where from the data source..
     *
     */
    public function testPostUpdateAll()
    {

    }

    /**
     * Test case for postUpsert
     *
     * Update an existing model instance or insert a new one into the data source..
     *
     */
    public function testPostUpsert()
    {

    }

}
