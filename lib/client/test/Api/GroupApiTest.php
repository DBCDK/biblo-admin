<?php
/**
 * GroupApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * communityservice
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * GroupApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GroupApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for groupCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testGroupCount()
    {

    }

    /**
     * Test case for groupCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testGroupCreate()
    {

    }

    /**
     * Test case for groupCreateChangeStreamGetGroupsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testGroupCreateChangeStreamGetGroupsChangeStream()
    {

    }

    /**
     * Test case for groupCreateChangeStreamPostGroupsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testGroupCreateChangeStreamPostGroupsChangeStream()
    {

    }

    /**
     * Test case for groupDeleteById
     *
     * Delete a model instance by id from the data source..
     *
     */
    public function testGroupDeleteById()
    {

    }

    /**
     * Test case for groupExistsGetGroupsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testGroupExistsGetGroupsidExists()
    {

    }

    /**
     * Test case for groupExistsHeadGroupsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testGroupExistsHeadGroupsid()
    {

    }

    /**
     * Test case for groupFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testGroupFind()
    {

    }

    /**
     * Test case for groupFindById
     *
     * Find a model instance by id from the data source..
     *
     */
    public function testGroupFindById()
    {

    }

    /**
     * Test case for groupFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testGroupFindOne()
    {

    }

    /**
     * Test case for groupPrototypeCountFlags
     *
     * Counts flags of Group..
     *
     */
    public function testGroupPrototypeCountFlags()
    {

    }

    /**
     * Test case for groupPrototypeCountMembers
     *
     * Counts members of Group..
     *
     */
    public function testGroupPrototypeCountMembers()
    {

    }

    /**
     * Test case for groupPrototypeCountPosts
     *
     * Counts posts of Group..
     *
     */
    public function testGroupPrototypeCountPosts()
    {

    }

    /**
     * Test case for groupPrototypeCreateCoverImage
     *
     * Creates a new instance in coverImage of this model..
     *
     */
    public function testGroupPrototypeCreateCoverImage()
    {

    }

    /**
     * Test case for groupPrototypeCreateFlags
     *
     * Creates a new instance in flags of this model..
     *
     */
    public function testGroupPrototypeCreateFlags()
    {

    }

    /**
     * Test case for groupPrototypeCreateMembers
     *
     * Creates a new instance in members of this model..
     *
     */
    public function testGroupPrototypeCreateMembers()
    {

    }

    /**
     * Test case for groupPrototypeCreatePosts
     *
     * Creates a new instance in posts of this model..
     *
     */
    public function testGroupPrototypeCreatePosts()
    {

    }

    /**
     * Test case for groupPrototypeDeleteFlags
     *
     * Deletes all flags of this model..
     *
     */
    public function testGroupPrototypeDeleteFlags()
    {

    }

    /**
     * Test case for groupPrototypeDeleteMembers
     *
     * Deletes all members of this model..
     *
     */
    public function testGroupPrototypeDeleteMembers()
    {

    }

    /**
     * Test case for groupPrototypeDeletePosts
     *
     * Deletes all posts of this model..
     *
     */
    public function testGroupPrototypeDeletePosts()
    {

    }

    /**
     * Test case for groupPrototypeDestroyByIdFlags
     *
     * Delete a related item by id for flags..
     *
     */
    public function testGroupPrototypeDestroyByIdFlags()
    {

    }

    /**
     * Test case for groupPrototypeDestroyByIdMembers
     *
     * Delete a related item by id for members..
     *
     */
    public function testGroupPrototypeDestroyByIdMembers()
    {

    }

    /**
     * Test case for groupPrototypeDestroyByIdPosts
     *
     * Delete a related item by id for posts..
     *
     */
    public function testGroupPrototypeDestroyByIdPosts()
    {

    }

    /**
     * Test case for groupPrototypeDestroyCoverImage
     *
     * Deletes coverImage of this model..
     *
     */
    public function testGroupPrototypeDestroyCoverImage()
    {

    }

    /**
     * Test case for groupPrototypeExistsMembers
     *
     * Check the existence of members relation to an item by id..
     *
     */
    public function testGroupPrototypeExistsMembers()
    {

    }

    /**
     * Test case for groupPrototypeFindByIdFlags
     *
     * Find a related item by id for flags..
     *
     */
    public function testGroupPrototypeFindByIdFlags()
    {

    }

    /**
     * Test case for groupPrototypeFindByIdMembers
     *
     * Find a related item by id for members..
     *
     */
    public function testGroupPrototypeFindByIdMembers()
    {

    }

    /**
     * Test case for groupPrototypeFindByIdPosts
     *
     * Find a related item by id for posts..
     *
     */
    public function testGroupPrototypeFindByIdPosts()
    {

    }

    /**
     * Test case for groupPrototypeGetCoverImage
     *
     * Fetches hasOne relation coverImage..
     *
     */
    public function testGroupPrototypeGetCoverImage()
    {

    }

    /**
     * Test case for groupPrototypeGetFlags
     *
     * Queries flags of Group..
     *
     */
    public function testGroupPrototypeGetFlags()
    {

    }

    /**
     * Test case for groupPrototypeGetMembers
     *
     * Queries members of Group..
     *
     */
    public function testGroupPrototypeGetMembers()
    {

    }

    /**
     * Test case for groupPrototypeGetOwner
     *
     * Fetches belongsTo relation owner..
     *
     */
    public function testGroupPrototypeGetOwner()
    {

    }

    /**
     * Test case for groupPrototypeGetPosts
     *
     * Queries posts of Group..
     *
     */
    public function testGroupPrototypeGetPosts()
    {

    }

    /**
     * Test case for groupPrototypeLinkMembers
     *
     * Add a related item by id for members..
     *
     */
    public function testGroupPrototypeLinkMembers()
    {

    }

    /**
     * Test case for groupPrototypeUnlinkMembers
     *
     * Remove the members relation to an item by id..
     *
     */
    public function testGroupPrototypeUnlinkMembers()
    {

    }

    /**
     * Test case for groupPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source..
     *
     */
    public function testGroupPrototypeUpdateAttributes()
    {

    }

    /**
     * Test case for groupPrototypeUpdateByIdFlags
     *
     * Update a related item by id for flags..
     *
     */
    public function testGroupPrototypeUpdateByIdFlags()
    {

    }

    /**
     * Test case for groupPrototypeUpdateByIdMembers
     *
     * Update a related item by id for members..
     *
     */
    public function testGroupPrototypeUpdateByIdMembers()
    {

    }

    /**
     * Test case for groupPrototypeUpdateByIdPosts
     *
     * Update a related item by id for posts..
     *
     */
    public function testGroupPrototypeUpdateByIdPosts()
    {

    }

    /**
     * Test case for groupPrototypeUpdateCoverImage
     *
     * Update coverImage of this model..
     *
     */
    public function testGroupPrototypeUpdateCoverImage()
    {

    }

    /**
     * Test case for groupUpdateAll
     *
     * Update instances of the model matched by where from the data source..
     *
     */
    public function testGroupUpdateAll()
    {

    }

    /**
     * Test case for groupUpsert
     *
     * Update an existing model instance or insert a new one into the data source..
     *
     */
    public function testGroupUpsert()
    {

    }

}
