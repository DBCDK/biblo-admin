<?php
/**
 * CommentApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * communityservice
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * CommentApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CommentApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for commentCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testCommentCount()
    {

    }

    /**
     * Test case for commentCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testCommentCreate()
    {

    }

    /**
     * Test case for commentCreateChangeStreamGetCommentsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCommentCreateChangeStreamGetCommentsChangeStream()
    {

    }

    /**
     * Test case for commentCreateChangeStreamPostCommentsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCommentCreateChangeStreamPostCommentsChangeStream()
    {

    }

    /**
     * Test case for commentDeleteById
     *
     * Delete a model instance by id from the data source..
     *
     */
    public function testCommentDeleteById()
    {

    }

    /**
     * Test case for commentExistsGetCommentsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCommentExistsGetCommentsidExists()
    {

    }

    /**
     * Test case for commentExistsHeadCommentsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCommentExistsHeadCommentsid()
    {

    }

    /**
     * Test case for commentFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testCommentFind()
    {

    }

    /**
     * Test case for commentFindById
     *
     * Find a model instance by id from the data source..
     *
     */
    public function testCommentFindById()
    {

    }

    /**
     * Test case for commentFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testCommentFindOne()
    {

    }

    /**
     * Test case for commentPrototypeCountFlags
     *
     * Counts flags of Comment..
     *
     */
    public function testCommentPrototypeCountFlags()
    {

    }

    /**
     * Test case for commentPrototypeCreateFlags
     *
     * Creates a new instance in flags of this model..
     *
     */
    public function testCommentPrototypeCreateFlags()
    {

    }

    /**
     * Test case for commentPrototypeCreateImage
     *
     * Creates a new instance in image of this model..
     *
     */
    public function testCommentPrototypeCreateImage()
    {

    }

    /**
     * Test case for commentPrototypeCreateVideo
     *
     * Creates a new instance in video of this model..
     *
     */
    public function testCommentPrototypeCreateVideo()
    {

    }

    /**
     * Test case for commentPrototypeDeleteFlags
     *
     * Deletes all flags of this model..
     *
     */
    public function testCommentPrototypeDeleteFlags()
    {

    }

    /**
     * Test case for commentPrototypeDestroyByIdFlags
     *
     * Delete a related item by id for flags..
     *
     */
    public function testCommentPrototypeDestroyByIdFlags()
    {

    }

    /**
     * Test case for commentPrototypeDestroyImage
     *
     * Deletes image of this model..
     *
     */
    public function testCommentPrototypeDestroyImage()
    {

    }

    /**
     * Test case for commentPrototypeDestroyVideo
     *
     * Deletes video of this model..
     *
     */
    public function testCommentPrototypeDestroyVideo()
    {

    }

    /**
     * Test case for commentPrototypeFindByIdFlags
     *
     * Find a related item by id for flags..
     *
     */
    public function testCommentPrototypeFindByIdFlags()
    {

    }

    /**
     * Test case for commentPrototypeGetFlags
     *
     * Queries flags of Comment..
     *
     */
    public function testCommentPrototypeGetFlags()
    {

    }

    /**
     * Test case for commentPrototypeGetImage
     *
     * Fetches hasOne relation image..
     *
     */
    public function testCommentPrototypeGetImage()
    {

    }

    /**
     * Test case for commentPrototypeGetOwner
     *
     * Fetches belongsTo relation owner..
     *
     */
    public function testCommentPrototypeGetOwner()
    {

    }

    /**
     * Test case for commentPrototypeGetPost
     *
     * Fetches belongsTo relation post..
     *
     */
    public function testCommentPrototypeGetPost()
    {

    }

    /**
     * Test case for commentPrototypeGetVideo
     *
     * Fetches hasOne relation video..
     *
     */
    public function testCommentPrototypeGetVideo()
    {

    }

    /**
     * Test case for commentPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source..
     *
     */
    public function testCommentPrototypeUpdateAttributes()
    {

    }

    /**
     * Test case for commentPrototypeUpdateByIdFlags
     *
     * Update a related item by id for flags..
     *
     */
    public function testCommentPrototypeUpdateByIdFlags()
    {

    }

    /**
     * Test case for commentPrototypeUpdateImage
     *
     * Update image of this model..
     *
     */
    public function testCommentPrototypeUpdateImage()
    {

    }

    /**
     * Test case for commentPrototypeUpdateVideo
     *
     * Update video of this model..
     *
     */
    public function testCommentPrototypeUpdateVideo()
    {

    }

    /**
     * Test case for commentUpdateAll
     *
     * Update instances of the model matched by where from the data source..
     *
     */
    public function testCommentUpdateAll()
    {

    }

    /**
     * Test case for commentUpsert
     *
     * Update an existing model instance or insert a new one into the data source..
     *
     */
    public function testCommentUpsert()
    {

    }

}
